{"version":3,"sources":["components/Card/Card.js","components/Main/Main.js","images/arc_nav.svg","utils/Constants.js","components/Navigation/Navigation.js","components/Header/Header.js","utils/Api.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Card","card","onClickLike","isFavorites","isLiked","localStorage","getItem","id","cardLikeClass","cardDateClass","className","src","image","alt","genre","name","date","split","type","onClick","_","Main","cards","map","i","monthsName","ListItem","data","onClickFunc","dataKey","Navigation","months","cites","city","month","onClickCity","onClickMonth","Object","keys","key","pathArcNav","Header","favorites","onClickFavorites","onClickIndex","api","config","this","_url","url","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","getAllMonths","selectedMonth","forEach","includes","push","sort","splice","indexOf","shift","getAllCites","selectedCity","getSelectedCards","filter","getFavoriteCards","App","useState","setCards","setMonths","setCites","setMonth","setCity","setFavorites","setIsFavorites","useEffect","getAllEvents","newCards","length","catch","err","console","log","path","removeItem","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAyBeA,MAvBf,YAAiD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YACxBC,EAAUC,aAAaC,QAAQL,EAAKM,IACpCC,EAAa,qBAAiBJ,EAAU,oBAAsB,IAC9DK,EAAa,qBAAiBN,EAAc,sBAAwB,IAC1E,OACI,qBAAIO,UAAU,OAAd,UACI,qBACIC,IAAKV,EAAKW,MACVF,UAAU,cACVG,IAAKZ,EAAKa,QAEd,oBAAIJ,UAAU,cAAd,SACKT,EAAKc,OAEV,oBAAGL,UAAWD,EAAd,UACKR,EAAKe,KAAKC,MAAM,KAAK,GAD1B,IAC+Bd,EAAaF,EAAKe,KAAKC,MAAM,KAAK,GAAI,MAErE,wBAAQC,KAAK,SAASR,UAAWF,EAAeW,QAAS,SAAAC,GAAC,OAAIlB,EAAYD,UCCvEoB,MAjBf,YAAkD,IAAnCC,EAAkC,EAAlCA,MAAOpB,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAC/B,OACI,sBAAMO,UAAU,OAAhB,SACI,oBAAIA,UAAU,eAAd,SACKY,EAAMC,KAAI,SAACtB,EAAMuB,GAAP,OACP,cAAC,EAAD,CAEIvB,KAAMA,EACNC,YAAaA,EACbC,YAAaA,GAHRF,EAAKM,YCTnB,G,kBAAA,IAA0B,qCCA5BkB,EAAa,CACtB,KAAM,UACN,KAAM,WACN,KAAM,QACN,KAAM,QACN,KAAM,MACN,KAAM,OACN,KAAM,OACN,KAAM,SACN,KAAM,YACN,GAAM,UACN,GAAM,WACN,GAAM,YCPV,SAASC,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,QAClC,OACI,oBAAInB,UAAU,wCAAwCS,QAAS,SAAAC,GAAC,OAAcQ,EAAVC,GAA4CF,IAAhH,SACI,mBAAGjB,UAAU,wBAAb,SACKiB,MAyDFG,MAnDf,YAA8E,IAAzDC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC1D,OACI,sBAAK1B,UAAU,aAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGA,UAAU,mBAAb,mBAGA,sBAAKA,UAAU,wBAAf,UACI,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,mBAAmBS,QAAS,SAAAC,GAAC,OAAIe,EAAYF,IAA3D,SACI,mBAAGvB,UAAU,mDAAb,SACKuB,MAGT,oBAAIvB,UAAU,sBAAd,SAEQ2B,OAAOC,KAAKN,GAAOT,KAAI,SAACgB,GAAD,OACnB,cAACb,EAAD,CAAUC,KAAMK,EAAMO,GAAMX,YAAaO,YAKzD,qBAAKxB,IAAK6B,EAAY9B,UAAU,oBAAoBG,IAAI,oIAGhE,sBAAKH,UAAU,sBAAf,UACI,mBAAGA,UAAU,mBAAb,oBAGA,sBAAKA,UAAU,wBAAf,UACI,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,mBAAmBS,QAAS,SAAAC,GAAC,OAAIgB,EAAaF,IAA5D,SACI,mBAAGxB,UAAU,mDAAb,SACKe,EAAWS,OAGpB,oBAAIxB,UAAU,sBAAd,SAEQ2B,OAAOC,KAAKP,GAAQR,KAAI,SAACgB,GAAD,OACpB,cAACb,EAAD,CAAUC,KAAMF,EAAWM,EAAOQ,IAAOX,YAAaQ,EAAcP,QAASE,EAAOQ,aAKpG,qBAAK5B,IAAK6B,EAAY9B,UAAU,oBAAoBG,IAAI,wIC/B7D4B,MAxBf,YAAkI,IAAjHV,EAAgH,EAAhHA,OAAQC,EAAwG,EAAxGA,MAAOC,EAAiG,EAAjGA,KAAMC,EAA2F,EAA3FA,MAAOC,EAAoF,EAApFA,YAAaC,EAAuE,EAAvEA,aAAcM,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,iBAAkBxC,EAA4B,EAA5BA,YAAayC,EAAe,EAAfA,aAC9G,OACI,yBAAQlC,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAgBS,QAAS,SAAAC,GAAC,OAAIwB,KAA5C,2BAGCzC,EAAc,GACX,cAAC,EAAD,CACA4B,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbC,aAAcA,IAIlB,mBAAG1B,UAAU,gBAAgBS,QAAS,SAAAC,GAAC,OAAIuB,KAA3C,SACKD,Q,gBCAFG,EAJH,I,WAjBR,WAAYC,GAAS,oBACjBC,KAAKC,KAAOF,EAAOG,I,kDAGvB,SAAeC,GACX,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,+CAAyBJ,EAAIK,W,0BAGxC,WACI,OAAOC,MAAMT,KAAKC,MACbS,KAAKV,KAAKW,oB,KAIX,CAAQ,CAChBT,IAAK,0FCZT,SAASU,EAAarC,EAAOsC,GACzB,IAAM7B,EAAS,GACfT,EAAMuC,SAAQ,SAAA5D,GACV,IAAMiC,EAAQjC,EAAKe,KAAKC,MAAM,KAAK,GAC9Bc,EAAO+B,SAAS5B,IACjBH,EAAOgC,KAAK7B,MAGpBH,EAAOiC,OACP,IAAI9B,EAAQ,GAOZ,OANI0B,GACA1B,EAAQ0B,EACR7B,EAAOkC,OAAOlC,EAAOmC,QAAQhC,GAAQ,IAErCA,EAAQH,EAAOoC,QAEZ,CAACjC,EAAOH,GAGnB,SAASqC,EAAY9C,EAAO+C,GACxB,IAAMrC,EAAQ,GACdV,EAAMuC,SAAQ,SAAA5D,GACV,IAAMgC,EAAOhC,EAAKgC,KACbD,EAAM8B,SAAS7B,IAChBD,EAAM+B,KAAK9B,MAGnBD,EAAMgC,OACN,IAAI/B,EAAO,GAOX,OANIoC,GACApC,EAAOoC,EACPrC,EAAMiC,OAAOjC,EAAMkC,QAAQjC,GAAO,IAElCA,EAAOD,EAAMmC,QAEV,CAAClC,EAAMD,GAIlB,SAASsC,EAAiBhD,EAAOY,EAAOD,GACpC,OAAOX,EAAMiD,QAAO,SAACtE,GACjB,OAAQA,EAAKgC,OAASA,GAAQhC,EAAKe,KAAKC,MAAM,KAAK,KAAOiB,KAIlE,SAASsC,EAAiBlD,GACtB,OAAOA,EAAMiD,QAAO,SAACtE,GACjB,OAAQI,aAAaC,QAAQL,EAAKM,OA6G3BkE,MAzGf,WAEI,MAA0BC,mBAAS,IAAnC,mBAAOpD,EAAP,KAAcqD,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAAO3C,EAAP,KAAe6C,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAO1C,EAAP,KAAc6C,EAAd,KACA,EAA0BH,mBAAS,IAAnC,mBAAOxC,EAAP,KAAc4C,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOzC,EAAP,KAAa8C,EAAb,KACA,EAAkCL,mBAAS,KAA3C,mBAAOhC,EAAP,KAAkBsC,EAAlB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOvE,EAAP,KAAoB8E,EAApB,KAoEF,OAlEEC,qBAAU,WACNrC,EAAIsC,eAAe1B,MAAK,SAACnC,GACrBsD,EAAUjB,EAAarC,GAAO,IAC9BuD,EAAST,EAAY9C,GAAO,IAC5BwD,EAASxD,EAAM,GAAGN,KAAKC,MAAM,KAAK,IAClC8D,EAAQzD,EAAM,GAAGW,MACjB,IAAMmD,EAAWd,EAAiBhD,EAAOA,EAAM,GAAGN,KAAKC,MAAM,KAAK,GAAIK,EAAM,GAAGW,MAC/E0C,EAASS,GACTJ,EAAa3E,aAAagF,WAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC/B,IAyDD,qBAAK7E,UAAU,MAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAOgF,KAAK,IAAZ,UACI,cAAC,EAAD,CACE3D,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPE,aAhEK,SAACF,GACtBW,EAAIsC,eAAe1B,MAAK,SAACnC,GACrBsD,EAAUjB,EAAarC,EAAOY,GAAO,IACrC,IAAMkD,EAAWd,EAAiBhD,EAAOY,EAAOD,GAChD0C,EAASS,GACTN,EAAS5C,MACVoD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OA2DdpD,YAxDI,SAACF,GACrBY,EAAIsC,eAAe1B,MAAK,SAACnC,GACrBuD,EAAST,EAAY9C,EAAOW,GAAM,IAClC,IAAMmD,EAAWd,EAAiBhD,EAAOY,EAAOD,GAChD0C,EAASS,GACTL,EAAQ9C,MACTqD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAmDd7C,UAAWA,EACXC,iBA7BS,WACzBsC,GAAe,GACfpC,EAAIsC,eAAe1B,MAAK,SAACnC,GACrB,IAAM8D,EAAWZ,EAAiBlD,GAClCqD,EAASS,MACVE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAyBdpF,YAAaA,EACbyC,aAvBK,WACrBqC,GAAe,GACfpC,EAAIsC,eAAe1B,MAAK,SAACnC,GACrB,IAAM8D,EAAWd,EAAiBhD,EAAOY,EAAOD,GAChD0C,EAASS,SAqBC,cAAC,EAAD,CACE9D,MAAOA,EACPpB,YAvDI,SAACD,GACjBI,aAAaC,QAAQL,EAAKM,IAC1BF,aAAasF,WAAW1F,EAAKM,IAE7BF,aAAauF,QAAQ3F,EAAKM,GAAI,QAElCsC,EAAIsC,eAAe1B,MAAK,SAACnC,GACrBsD,EAAUjB,EAAarC,EAAOY,GAAO,IACrC,IAAIkD,EAAW,GAEXA,EADAjF,EACWqE,EAAiBlD,GAEjBgD,EAAiBhD,EAAOY,EAAOD,GAE9C0C,EAASS,GACTN,EAAS5C,GACT8C,EAAa3E,aAAagF,WAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAuCdpF,YAAaA,cC9ItB0F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c2587b0.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card({card, onClickLike, isFavorites}) {\n    const isLiked = localStorage.getItem(card.id)\n    const cardLikeClass = `card__like ${isLiked ? 'card__like_active' : ''}`\n    const cardDateClass = `card__date ${isFavorites ? 'card__date_favorite' : ''}`;\n    return (\n        <li className=\"card\">\n            <img\n                src={card.image}\n                className=\"card__image\"\n                alt={card.genre}\n            />\n            <h2 className=\"card__title\">\n                {card.name}\n            </h2>\n            <p className={cardDateClass}>\n                {card.date.split('.')[0]} {isFavorites? card.date.split('.')[1]: ''}\n            </p>\n            <button type=\"button\" className={cardLikeClass} onClick={_ => onClickLike(card)}>\n            </button>\n        </li>\n    );\n}\n\nexport default Card;","import \"./Main.css\";\nimport Card from \"../Card/Card\";\n\nfunction Main({cards, onClickLike, isFavorites}) {\n    return (\n        <main className=\"main\">\n            <ul className=\"main__places\">\n                {cards.map((card, i) => (\n                    <Card\n                        key={card.id}\n                        card={card}\n                        onClickLike={onClickLike}\n                        isFavorites={isFavorites}\n                    />\n                ))}\n            </ul>\n        </main>\n    );\n}\n\nexport default Main;","export default __webpack_public_path__ + \"static/media/arc_nav.c381148f.svg\";","export const monthsName = {\n    \"01\": \"January\",\n    \"02\": \"Fabruary\",\n    \"03\": \"March\",\n    \"04\": \"April\",\n    \"05\": \"May\",\n    \"06\": \"June\",\n    \"07\": \"July\",\n    \"08\": \"August\",\n    \"09\": \"September\",\n    \"10\": \"October\",\n    \"11\": \"November\",\n    \"12\": \"December\",\n}","import \"./Navigation.css\";\nimport pathArcNav from \"../../images/arc_nav.svg\";\nimport {monthsName} from \"../../utils/Constants\";\n\n\nfunction ListItem({data, onClickFunc, dataKey}) {\n    return (\n        <li className=\"navigation__item navigation__item_sub\" onClick={_ => dataKey ? onClickFunc(dataKey): onClickFunc(data)}>\n            <p className=\"navigation__item-text\">\n                {data}\n            </p>\n        </li>\n    );\n}\n\nfunction Navigation({months, cites, city, month, onClickCity, onClickMonth}) {\n    return (\n        <nav className=\"navigation\">\n            <div className=\"navigation__section\">\n                <p className=\"navigation__text\">\n                    City:\n                </p>\n                <div className=\"navigation__container\">\n                    <ul className=\"navigation__list\">\n                        <li className=\"navigation__item\" onClick={_ => onClickCity(city)}>\n                            <p className=\"navigation__item-text navigation__item-text_head\">\n                                {city}\n                            </p>\n                        </li>\n                        <ul className=\"navigation__submenu\">\n                            {\n                                Object.keys(cites).map((key) => (\n                                    <ListItem data={cites[key]} onClickFunc={onClickCity}/>\n                                ))\n                            }\n                        </ul>\n                    </ul>\n                    <img src={pathArcNav} className=\"navigation__image\" alt=\"Навигационная стрелка\"/>\n                </div>\n            </div>\n            <div className=\"navigation__section\">\n                <p className=\"navigation__text\">\n                    Month:\n                </p>\n                <div className=\"navigation__container\">\n                    <ul className=\"navigation__list\">\n                        <li className=\"navigation__item\" onClick={_ => onClickMonth(month)}>\n                            <p className=\"navigation__item-text navigation__item-text_head\">\n                                {monthsName[month]}\n                            </p>\n                        </li>\n                        <ul className=\"navigation__submenu\">\n                            {\n                                Object.keys(months).map((key) => (\n                                    <ListItem data={monthsName[months[key]]} onClickFunc={onClickMonth} dataKey={months[key]}/>\n                                ))\n                            }\n                        </ul>\n                    </ul>\n                    <img src={pathArcNav} className=\"navigation__image\" alt=\"Навигационная стрелка\" />\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navigation;","import \"./Header.css\";\nimport Navigation from \"../Navigation/Navigation\";\n\n\nfunction Header({months, cites, city, month, onClickCity, onClickMonth, favorites, onClickFavorites, isFavorites, onClickIndex}) {\n    return (\n        <header className=\"header\">\n            <h1 className=\"header__title\" onClick={_ => onClickIndex()}>\n                Event Listing\n            </h1>\n            {isFavorites ? '' :\n                <Navigation\n                months={months}\n                cites={cites}\n                city={city}\n                month={month}\n                onClickCity={onClickCity}\n                onClickMonth={onClickMonth}\n                />\n            }\n\n            <p className=\"header__likes\" onClick={_ => onClickFavorites()}>\n                {favorites}\n            </p>\n        </header>\n    )\n}\n\nexport default Header;","class Api {\n    constructor(config) {\n        this._url = config.url;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    getAllEvents() {\n        return fetch(this._url)\n            .then(this._checkResponse);\n    }\n}\n\nconst api = new Api({\n    url: 'https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json',\n})\n\nexport default api;","import { Route, Switch } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport Main from \"../Main/Main\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport api from \"../../utils/Api\";\n\nfunction getAllMonths(cards, selectedMonth) {\n    const months = []\n    cards.forEach(card => {\n        const month = card.date.split('.')[1];\n        if (!months.includes(month)) {\n            months.push(month);\n        }\n    })\n    months.sort();\n    let month = '';\n    if (selectedMonth) {\n        month = selectedMonth;\n        months.splice(months.indexOf(month), 1);\n    } else {\n        month = months.shift()\n    }\n    return [month, months]\n}\n\nfunction getAllCites(cards, selectedCity) {\n    const cites = []\n    cards.forEach(card => {\n        const city = card.city;\n        if (!cites.includes(city)) {\n            cites.push(city);\n        }\n    })\n    cites.sort();\n    let city = '';\n    if (selectedCity) {\n        city = selectedCity;\n        cites.splice(cites.indexOf(city), 1);\n    } else {\n        city = cites.shift();\n    }\n    return [city, cites]\n}\n\n\nfunction getSelectedCards(cards, month, city) {\n    return cards.filter((card) => {\n        return (card.city === city && card.date.split('.')[1] === month)\n    })\n}\n\nfunction getFavoriteCards(cards) {\n    return cards.filter((card) => {\n        return (localStorage.getItem(card.id));\n    })\n}\n\nfunction App() {\n\n    const [cards, setCards] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [cites, setCites] = useState([]);\n    const [month, setMonth] = useState('');\n    const [city, setCity] = useState('');\n    const [favorites, setFavorites] = useState('0');\n    const [isFavorites, setIsFavorites] = useState(false);\n\n    useEffect(() => {\n        api.getAllEvents().then((cards) => {\n            setMonths(getAllMonths(cards)[1]);\n            setCites(getAllCites(cards)[1]);\n            setMonth(cards[0].date.split('.')[1]);\n            setCity(cards[0].city);\n            const newCards = getSelectedCards(cards, cards[0].date.split('.')[1], cards[0].city);\n            setCards(newCards);\n            setFavorites(localStorage.length);\n        }).catch((err) => console.log(err));\n    }, []);\n\n    const handleMonthClick = (month) => {\n        api.getAllEvents().then((cards) =>{\n            setMonths(getAllMonths(cards, month)[1]);\n            const newCards = getSelectedCards(cards, month, city);\n            setCards(newCards);\n            setMonth(month);\n        }).catch((err) => console.log(err));\n    }\n\n    const handleCityClick = (city) => {\n        api.getAllEvents().then((cards) =>{\n            setCites(getAllCites(cards, city)[1]);\n            const newCards = getSelectedCards(cards, month, city);\n            setCards(newCards);\n            setCity(city);\n        }).catch((err) => console.log(err));\n    }\n\n    const handleLikeClick = (card) => {\n        if (localStorage.getItem(card.id)) {\n            localStorage.removeItem(card.id);\n        } else {\n            localStorage.setItem(card.id, 'like');\n        }\n        api.getAllEvents().then((cards) =>{\n            setMonths(getAllMonths(cards, month)[1]);\n            let newCards = []\n            if (isFavorites){\n                newCards = getFavoriteCards(cards);\n            } else {\n                newCards = getSelectedCards(cards, month, city);\n            }\n            setCards(newCards);\n            setMonth(month);\n            setFavorites(localStorage.length);\n        }).catch((err) => console.log(err));\n    }\n\n    const handleFavoritesClick = () => {\n        setIsFavorites(true);\n        api.getAllEvents().then((cards) => {\n            const newCards = getFavoriteCards(cards);\n            setCards(newCards);\n        }).catch((err) => console.log(err));\n    }\n\n    const handleClickIndex = () => {\n        setIsFavorites(false);\n        api.getAllEvents().then((cards) => {\n            const newCards = getSelectedCards(cards, month, city);\n            setCards(newCards);\n        })\n    }\n\n  return (\n      <div className=\"app\">\n          <div className=\"app__container\">\n              <Switch>\n                  <Route path=\"/\">\n                      <Header\n                        months={months}\n                        cites={cites}\n                        city={city}\n                        month={month}\n                        onClickMonth={handleMonthClick}\n                        onClickCity={handleCityClick}\n                        favorites={favorites}\n                        onClickFavorites={handleFavoritesClick}\n                        isFavorites={isFavorites}\n                        onClickIndex={handleClickIndex}\n                      />\n                      <Main\n                        cards={cards}\n                        onClickLike={handleLikeClick}\n                        isFavorites={isFavorites}\n                      />\n                  </Route>\n              </Switch>\n          </div>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}